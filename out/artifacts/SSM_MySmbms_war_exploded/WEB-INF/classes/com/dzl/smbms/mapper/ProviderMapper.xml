<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dzl.smbms.dao.ProviderMapper">

	<resultMap id="BaseResultMap" type="Provider">
		<id column="id" property="id" jdbcType="BIGINT" />
		<result column="proCode" property="proCode" jdbcType="VARCHAR" />
		<result column="proName" property="proName" jdbcType="VARCHAR" />
		<result column="proDesc" property="proDesc" jdbcType="VARCHAR" />
		<result column="proContact" property="proContact" jdbcType="VARCHAR" />
		<result column="proPhone" property="proPhone" jdbcType="VARCHAR" />
		<result column="proAddress" property="proAddress" jdbcType="VARCHAR" />
		<result column="proFax" property="proFax" jdbcType="VARCHAR" />
		<result column="createdBy" property="createdBy" jdbcType="BIGINT" />
		<result column="creationDate" property="creationDate" jdbcType="TIMESTAMP" />
		<result column="modifyDate" property="modifyDate" jdbcType="TIMESTAMP" />
		<result column="modifyBy" property="modifyBy" jdbcType="BIGINT" />
	</resultMap>

	<!-- sql片段 -->
	<sql id="Base_Column_List">
		id, proCode, proName, proDesc, proContact, proPhone, proAddress, proFax,
		createdBy,
		creationDate, modifyDate, modifyBy
	</sql>
	
	<!-- 查询全部供应商信息 分页-->
	<select id="selectProviderList" resultType="Provider" parameterType="map" >
		select  * from smbms_provider where 1 = 1
		<if test="proName!=null and proName!=''">
			and proName LIKE CONCAT('%',#{proName},'%')
		</if>
		<if test="proCode!=null and proCode!=''">
			and proCode LIKE CONCAT('%',#{proCode},'%')
		</if>
			order by creationDate DESC limit #{currentPageNo},#{pageSize}
	</select>
	
	<!-- 通过条件查询-供应商表记录数  -->
	<select id="selectProviderCount" resultType="int">
		select count(1) as count from smbms_provider p where 1 = 1
		<if test="proName!='' and proName!=null">
			and p.proName like CONCAT('%',#{proName},'%')
		</if>
		<if test="proCode!='' and proCode!=null">
			and p.proCode like CONCAT('%',#{proCode},'%')
		</if>
	</select>
	
	<!-- 供应商编码验证是否存在   -->
	<select id="selectProviderCodeExist" resultType="Provider">
		select  * from smbms_provider where proCode=#{proCode}
	</select>
	
	<!--  根据供应商id查询指定供应商信息    -->
	<select id="selectByPrimaryKey" resultMap="BaseResultMap"
		parameterType="java.lang.Integer">
		select
		<include refid="Base_Column_List" />
		from smbms_provider
		where id = #{id,jdbcType=BIGINT}
	</select>
	
	<!-- 根据供应商id删除指定供应商信息  -->
	<delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
		delete from smbms_provider
		where id = #{id,jdbcType=BIGINT}
	</delete>
	
	<!--  查询全部供应商名称   -->
	<select id="selectProviderName" resultType="Provider">
		select * from smbms_provider
	</select>
	
	
	<!-- 为供应商添加一条完整数据 -->
	<insert id="insert" parameterType="Provider">
		insert into smbms_provider (proCode, proName,
		proDesc, proContact, proPhone,
		proAddress, proFax, createdBy,
		creationDate
		)
		values (#{proCode,jdbcType=VARCHAR},
		#{proName,jdbcType=VARCHAR},
		#{proDesc,jdbcType=VARCHAR}, 
		#{proContact,jdbcType=VARCHAR},
		#{proPhone,jdbcType=VARCHAR},
		#{proAddress,jdbcType=VARCHAR}, 
		#{proFax,jdbcType=VARCHAR},
		#{createdBy,jdbcType=BIGINT},
		#{creationDate,jdbcType=TIMESTAMP}
		)
	</insert>
	
	<!-- 为供应商添加一条数据 可选择性  -->
	<insert id="insertSelective" parameterType="Provider">
		insert into smbms_provider
		<trim prefix="(" suffix=")" suffixOverrides=",">
			<if test="proCode != null">
				proCode,
			</if>
			<if test="proName != null">
				proName,
			</if>
			<if test="proDesc != null">
				proDesc,
			</if>
			<if test="proContact != null">
				proContact,
			</if>
			<if test="proPhone != null">
				proPhone,
			</if>
			<if test="proAddress != null">
				proAddress,
			</if>
			<if test="proFax != null">
				proFax,
			</if>
			<if test="createdBy != null">
				createdBy,
			</if>
			<if test="creationDate != null">
				creationDate,
			</if>
		</trim>
		<trim prefix="values (" suffix=")" suffixOverrides=",">
			<if test="proCode != null">
				#{proCode,jdbcType=VARCHAR},
			</if>
			<if test="proName != null">
				#{proName,jdbcType=VARCHAR},
			</if>
			<if test="proDesc != null">
				#{proDesc,jdbcType=VARCHAR},
			</if>
			<if test="proContact != null">
				#{proContact,jdbcType=VARCHAR},
			</if>
			<if test="proPhone != null">
				#{proPhone,jdbcType=VARCHAR},
			</if>
			<if test="proAddress != null">
				#{proAddress,jdbcType=VARCHAR},
			</if>
			<if test="proFax != null">
				#{proFax,jdbcType=VARCHAR},
			</if>
			<if test="createdBy != null">
				#{createdBy,jdbcType=BIGINT},
			</if>
			<if test="creationDate != null">
				#{creationDate,jdbcType=TIMESTAMP},
			</if>
		</trim>
	</insert>
	
	<!-- 根据id修改不为空的字段 -->
	<update id="updateByPrimaryKeySelective" parameterType="Provider">
		update smbms_provider
		<set>
			<if test="proCode != null">
				proCode = #{proCode,jdbcType=VARCHAR},
			</if>
			<if test="proName != null">
				proName = #{proName,jdbcType=VARCHAR},
			</if>
			<if test="proDesc != null">
				proDesc = #{proDesc,jdbcType=VARCHAR},
			</if>
			<if test="proContact != null">
				proContact = #{proContact,jdbcType=VARCHAR},
			</if>
			<if test="proPhone != null">
				proPhone = #{proPhone,jdbcType=VARCHAR},
			</if>
			<if test="proAddress != null">
				proAddress = #{proAddress,jdbcType=VARCHAR},
			</if>
			<if test="proFax != null">
				proFax = #{proFax,jdbcType=VARCHAR},
			</if>
			<if test="modifyDate != null">
				modifyDate = #{modifyDate,jdbcType=TIMESTAMP},
			</if>
			<if test="modifyBy != null">
				modifyBy = #{modifyBy,jdbcType=BIGINT},
			</if>
		</set>
		where id = #{id,jdbcType=BIGINT}
	</update>
	
	<!-- 根据id修改供应商 如为空的字段在数据库中置为NULL。 -->
	<update id="updateByPrimaryKey" parameterType="Provider">
		update smbms_provider
		set proCode = #{proCode,jdbcType=VARCHAR},
		proName = #{proName,jdbcType=VARCHAR},
		proDesc = #{proDesc,jdbcType=VARCHAR},
		proContact = #{proContact,jdbcType=VARCHAR},
		proPhone = #{proPhone,jdbcType=VARCHAR},
		proAddress = #{proAddress,jdbcType=VARCHAR},
		proFax = #{proFax,jdbcType=VARCHAR},
		createdBy = #{createdBy,jdbcType=BIGINT},
		creationDate = #{creationDate,jdbcType=TIMESTAMP},
		modifyDate = #{modifyDate,jdbcType=TIMESTAMP},
		modifyBy = #{modifyBy,jdbcType=BIGINT}
		where id = #{id,jdbcType=BIGINT}
	</update>
</mapper>